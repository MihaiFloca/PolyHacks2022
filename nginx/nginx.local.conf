worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    resolver 127.0.0.11;

    # The two following maps are here to make websocket connections reach the
    # correct upstream. sockjs will issue a first vanilla HTTP request to ask
    # for websocket connection informations before issuing the connection
    # upgrade request to start the websocket connection.
    # The issue we attempt to solve here is that only the first request will
    # contains a Referer header allowing us to infer the upstream to proxy the
    # websocket connection to. The Upgrade request does only includes the
    # Origin header as required by the websocket protocol.
    # The way we solve it is by setting a cookie on first HTTP request then
    # make use of that cookie in the following request to proxy the ws://
    # protocol to the correct destination

    # This first map sets the upstream_for_referer variable to the url we wish
    # to proxy our ws:// connection to.
    map $http_referer $upstream_for_referer {
        default $fomo_frontend;
    }

    # This second map sets the sockjs upstream variable to either the cookie
    # contained value OR the upstream for referer
    map $cookie_UPGRADETO $sockjs_upstream {
        default $upstream_for_referer;
        ~*      $cookie_UPGRADETO;
    }

    server {
        listen 80;
        proxy_buffering off;

        set $fomo_frontend http://fomo-frontend:8080;
        set $fomo_backend http://fomo-backend:8000;

        gzip    on;
        gzip_types text/css image/svg+xml application/javascript application/json application/octet-stream;

        # Proxy for webpack dev server hot reloading socket
        location /ws {
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "Upgrade";
            proxy_set_header        Host $host:$server_port;

            add_header              Set-Cookie "upgradeto=$sockjs_upstream;Max-Age=5";

            proxy_pass $fomo_frontend;
        }

        location ~ /fomo/(.*) {
            proxy_set_header        Host $host:$server_port;
            proxy_set_header        X-Real-IP  $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            # set query variable for route with spaces
            # https://stackoverflow.com/questions/8838905/how-to-avoid-nginx-to-replace-20-by-whitespace-when-using-as-a-proxy-proxy-pas
            set $query $1;
            proxy_pass              $fomo_backend/$query$is_args$args;
            proxy_read_timeout      300;
            proxy_buffering         off;

            client_max_body_size       100m;
            client_body_buffer_size    128k;
        }

        location / {
            proxy_set_header         Host $host:$server_port;
            proxy_set_header         X-Real-IP  $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' '*';

            proxy_pass              $fomo_frontend;
            proxy_read_timeout      90;
            proxy_buffering         off;

            client_max_body_size       100m;
            client_body_buffer_size    128k;
        }

    }
}
